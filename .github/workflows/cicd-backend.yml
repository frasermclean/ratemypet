name: CI/CD Backend

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/cicd-backend.yml
      - backend/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/cicd-backend.yml
      - backend/**
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: Release
    defaults:
      run:
        working-directory: ${{ github.workspace }}/backend

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9

      # Restore packages
      - name: Restore packages
        run: dotnet restore

      # Build solution
      - name: Build solution
        run: dotnet build --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

  deploy:
    name: Deploy application
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    permissions:
      contents: write
      id-token: write
      packages: write
    env:
      CONTAINER_REGISTRY: ghcr.io
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up QEMU and Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Calculate next version
      - name: Calculate next version
        uses: anothrNick/github-tag-action@v1
        id: calc_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
          DRY_RUN: true

      # Build and push image
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/backend
          file: api.Dockerfile
          tags: >-
            ${{ env.CONTAINER_REGISTRY }}/${{ vars.API_REPOSITORY_NAME }}:latest,
            ${{ env.CONTAINER_REGISTRY }}/${{ vars.API_REPOSITORY_NAME }}:${{ steps.calc_tag.outputs.new_tag }}
          push: true

      # Deploy Container App
      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.CONTAINER_REGISTRY }}/${{ vars.API_REPOSITORY_NAME }}:${{ steps.calc_tag.outputs.new_tag }}
          containerAppName: ${{ vars.API_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.RESOURCE_GROUP }}

      # Update version tag
      - name: Update version tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
