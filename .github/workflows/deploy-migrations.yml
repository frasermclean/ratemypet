name: Deploy EF Migrations

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/migrations-deployment
    paths:
      - .github/workflows/deploy-migrations.yml
      - backend/src/Infrastructure/Migrations/**

jobs:
  deploy:
    name: Deploy migrations
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
    env:
      BUILD_CONFIGURATION: Release
      RULE_IPV4_NAME: allow-runner-rule
      RULE_IPV6_NAME: allow-runner-ipv6-rule
    defaults:
      run:
        working-directory: ${{ github.workspace }}/backend
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha}}

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9

      # Install EF tool
      - name: Install EF tool
        run: dotnet tool install --global dotnet-ef

      # Build migrations bundle
      - name: Build migrations bundle
        run: >-
          dotnet ef migrations bundle
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --project src/Infrastructure/Infrastructure.csproj
          --startup-project src/Api/Api.csproj

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Get runner IP address
      - name: Get runner IP addresses
        id: get-runner-ips
        run: |
          RUNNER_IPV4="$(curl --silent https://api.ipify.org)"
          echo "Runner IPv4 address: $RUNNER_IPV4"
          echo "ipv4=$RUNNER_IPV4" >> $GITHUB_OUTPUT
          RUNNER_IPV6="$(curl --silent https://api6.ipify.org)"
          echo "Runner IPv6 address: $RUNNER_IPV6"
          echo "ipv6=$RUNNER_IPV6" >> $GITHUB_OUTPUT

      # Allow runner IPv4 address
      - name: Allow runner IPv4 address
        run: >-
          az sql server firewall-rule create
          --name ${{ env.RULE_IPV4_NAME }}
          --server ratemypet-prod-sql
          --resource-group ratemypet-prod-rg
          --start-ip-address ${{ steps.get-runner-ips.outputs.ipv4 }}
          --end-ip-address ${{ steps.get-runner-ips.outputs.ipv4 }}

      # Allow runner IPv6 address
      - name: Allow runner IPv6 address
        run: >-
          az sql server ipv6-firewall-rule create
          --name ${{ env.RULE_IPV6_NAME }}
          --server ratemypet-prod-sql
          --resource-group ratemypet-prod-rg
          --start-ip-address ${{ steps.get-runner-ips.outputs.ipv6 }}
          --end-ip-address ${{ steps.get-runner-ips.outputs.ipv6 }}

      # Apply migrations
      - name: Apply migrations
        env:
          CONNECTION_STRING: Server=tcp:ratemypet-prod-sql.database.windows.net,1433;Initial Catalog=ratemypet-prod-sqldb;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=Active Directory Default;
        run: ./efbundle --connection ${{ env.CONNECTION_STRING }}

      # Remove runner firewall rules
      - name: Remove runner firewall rules
        if: always()
        run: |
          az sql server firewall-rule delete --name ${{ env.RULE_IPV4_NAME }} --server ratemypet-prod-sql --resource-group ratemypet-prod-rg
          az sql server ipv6-firewall-rule delete --name ${{ env.RULE_IPV6_NAME }} --server ratemypet-prod-sql --resource-group ratemypet-prod-rg
