name: Deploy EF Migrations

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/migrations-deployment
    paths:
      - .github/workflows/deploy-migrations.yml
      - backend/src/Infrastructure/Migrations/**

jobs:
  deploy:
    name: Deploy migrations
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
    env:
      BUILD_CONFIGURATION: Release
      FIREWALL_RULE_NAME: allow-runner-rule
      SQL_SERVER_NAME: ratemypet-prod-sql
      SQL_DATABASE_NAME: ratemypet-prod-sqldb
      RESOURCE_GROUP: ratemypet-prod-rg
    defaults:
      run:
        working-directory: ${{ github.workspace }}/backend
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Get runner IP address
      - name: Get runner IP address
        id: get-runner-ip
        run: |
          RUNNER_IP="$(curl --silent https://api.ipify.org)"
          echo "Runner IPv4 address: $RUNNER_IP"
          echo "ip=$RUNNER_IP" >> $GITHUB_OUTPUT

      # Add runner firewall rule
      - name: Add runner firewall rule
        run: >-
          az sql server firewall-rule create
          --name ${{ env.FIREWALL_RULE_NAME }}
          --server ${{ env.SQL_SERVER_NAME }}
          --resource-group ${{ env.RESOURCE_GROUP }}
          --start-ip-address ${{ steps.get-runner-ip.outputs.ip }}
          --end-ip-address ${{ steps.get-runner-ip.outputs.ip }}

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9

      # Install EF tool
      - name: Install EF tool
        run: dotnet tool install --global dotnet-ef

      # Build migrations bundle
      - name: Build migrations bundle
        run: >-
          dotnet ef migrations bundle
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --project src/Infrastructure/Infrastructure.csproj
          --startup-project src/Api/Api.csproj

      # Apply migrations
      - name: Apply migrations
        env:
          CONNECTION_STRING: >-
            Server=tcp:${{ env.SQL_SERVER_NAME}}.database.windows.net,1433;
            Initial Catalog=${{ env.SQL_DATABASE_NAME }};
            Encrypt=True;
            TrustServerCertificate=False;
            Connection Timeout=30;
            Authentication=Active Directory Default;
        run: ./efbundle --connection ${{ env.CONNECTION_STRING }}

      # Remove runner firewall rule
      - name: Remove runner firewall rules
        if: always()
        run: >-
          az sql server firewall-rule delete
          --name ${{ env.FIREWALL_RULE_NAME }}
          --server ${{ env.SQL_SERVER_NAME }}
          --resource-group ${{ env.RESOURCE_GROUP }}
