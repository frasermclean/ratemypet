name: CI/CD Frontend

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/cicd-frontend.yml
      - frontend/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/cicd-frontend.yml
      - frontend/**
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build_deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
    strategy:
      matrix:
        environment: ${{ github.ref_name == 'main' && fromJson('["prod", "test"]') || fromJson('["test"]') }}
    environment:
      name: ${{ matrix.environment }}
      url: ${{ matrix.environment == 'prod' && 'https://ratemy.pet' || 'https://test.ratemy.pet' }}
    env:
      IMAGE_REGISTRY: ghcr.io
      IMAGE_REPOSITORY: ${{ github.repository_owner }}/ratemypet-web

    steps:
      # Login to container registry
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extract metadata
      - name: Extract metadata
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}
          labels: |
            org.opencontainers.image.title=ratemypet-web
            org.opencontainers.image.authors=Fraser McLean
            org.opencontainers.image.description=Rate My Pet - Frontend Angular SSR application

      # Build and push image
      - name: Build and push image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_RECORD_UPLOAD: false
          BUILD_CONFIGURATION: ${{ matrix.environment == 'prod' && 'production' || 'testing' }}
        with:
          context: "{{defaultContext}}:frontend"
          push: true
          build-args: CONFIGURATION=${{ env.BUILD_CONFIGURATION }}
          tags: ${{ steps.extract_metadata.outputs.tags }}
          annotations: ${{ steps.extract_metadata.outputs.annotations }}

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy Container App
      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          imageToDeploy: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          containerAppName: ratemypet-${{ matrix.environment }}-web-ca
          resourceGroup: ratemypet-${{ matrix.environment }}-rg
